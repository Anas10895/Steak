{"ast":null,"code":"var _jsxFileName = \"/Users/anasshar/Documents/GitHub/SEI/projects/Steak/cafe/Steak/coffee/src/components/Map.jsx\";\nimport React from 'react';\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react';\nexport class MapContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      userLocation: {\n        lat: 32,\n        lng: 32\n      },\n      loading: true,\n      data: null\n    };\n\n    this.displayMarkers = () => {\n      return this.state.stores.map((store, index) => {\n        return React.createElement(Marker, {\n          key: index,\n          id: index,\n          position: {\n            lat: store.latitude,\n            lng: store.longitude\n          },\n          onClick: () => console.log(\"You clicked me!\"),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:2551/api/v1/stores/').then(res => {\n      return res.json();\n    }).then(data => {\n      console.log(res);\n    });\n  }\n\n  componentDidMount(props) {\n    navigator.geolocation.getCurrentPosition(position => {\n      const _position$coords = position.coords,\n            latitude = _position$coords.latitude,\n            longitude = _position$coords.longitude;\n      this.setState({\n        stores: [{\n          lat: 47.49855629475769,\n          lng: -122.14184416996333\n        }, {\n          latitude: 47.359423,\n          longitude: -122.021071\n        }, {\n          latitude: 47.2052192687988,\n          longitude: -121.988426208496\n        }, {\n          latitude: 47.6307081,\n          longitude: -122.1434325\n        }, {\n          latitude: 47.3084488,\n          longitude: -122.2140121\n        }, {\n          latitude: 47.5524695,\n          longitude: -122.0425407\n        }],\n        userLocation: {\n          lat: latitude,\n          lng: longitude\n        },\n        loading: false\n      });\n    }, () => {\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    console.log(this.state.data);\n    const _this$state = this.state,\n          loading = _this$state.loading,\n          userLocation = _this$state.userLocation;\n    const google = this.props.google;\n\n    if (loading) {\n      return null;\n    }\n\n    return React.createElement(Map, {\n      google: google,\n      initialCenter: userLocation,\n      zoom: 15,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Marker, {\n      onClick: () => console.log(\"You clicked me!\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), this.displayMarkers());\n  }\n\n}\nexport default GoogleApiWrapper({\n  apiKey: process.env.REACT_APP_API\n})(MapContainer);","map":{"version":3,"sources":["/Users/anasshar/Documents/GitHub/SEI/projects/Steak/cafe/Steak/coffee/src/components/Map.jsx"],"names":["React","Map","GoogleApiWrapper","Marker","MapContainer","Component","state","userLocation","lat","lng","loading","data","displayMarkers","stores","map","store","index","latitude","longitude","console","log","componentDidMount","fetch","then","res","json","props","navigator","geolocation","getCurrentPosition","position","coords","setState","render","google","apiKey","process","env","REACT_APP_API"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react';\nexport class MapContainer extends React.Component {\n  state = { userLocation: { lat: 32, lng: 32 }, loading: true,data:null };\n\n\n  componentDidMount() {\n      fetch('http://localhost:2551/api/v1/stores/')\n      .then(res =>{     \n     return res.json()\n        }).then(data=>{\n          console.log(res)\n        })\n      }\n  componentDidMount(props) {\n    \n    navigator.geolocation.getCurrentPosition(\n      position => {\n        const { latitude, longitude } = position.coords;\n        this.setState({\n          stores: [{ lat: 47.49855629475769, lng: -122.14184416996333 },\n          { latitude: 47.359423, longitude: -122.021071 },\n          { latitude: 47.2052192687988, longitude: -121.988426208496 },\n          { latitude: 47.6307081, longitude: -122.1434325 },\n          { latitude: 47.3084488, longitude: -122.2140121 },\n          { latitude: 47.5524695, longitude: -122.0425407 }],\n          userLocation: { lat: latitude, lng: longitude },\n          loading: false\n        });\n      },\n      () => {\n        this.setState({ loading: false });\n      }\n    );\n  }\n  displayMarkers = () => {\n    return this.state.stores.map((store, index) => {\n      return <Marker key={index} id={index} position={{\n        lat: store.latitude,\n        lng: store.longitude\n      }}\n        onClick={() => console.log(\"You clicked me!\")} />\n    })\n  }\n  render() {\n        console.log(this.state.data)\n\n    const { loading, userLocation } = this.state;\n    const { google } = this.props;\n    if (loading) {\n      return null;\n    }\n    return (\n      <Map google={google} initialCenter={userLocation} zoom={15}>\n        <Marker onClick={() => console.log(\"You clicked me!\")} />\n        {this.displayMarkers()}\n      </Map>\n    );\n  }\n}\nexport default GoogleApiWrapper({\n  apiKey: process.env.REACT_APP_API\n})(MapContainer);"]},"metadata":{},"sourceType":"module"}