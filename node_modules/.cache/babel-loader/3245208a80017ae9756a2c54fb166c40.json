{"ast":null,"code":"var _jsxFileName = \"/Users/anasshar/Documents/GitHub/SEI/projects/Steak/cafe/Steak/coffee/src/components/Cart.jsx\";\nimport React, { Component } from \"react\";\nimport { Table, Button } from \"react-bootstrap\";\nexport default class Cart extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      cart: this.props.cart\n    };\n  }\n\n  componentDidMount() {\n    var cart = JSON.parse(localStorage.getItem(\"product_cart\"));\n    let temp = this.state.cart;\n    temp.push(cart);\n    this.setState({\n      cart: temp\n    });\n  } //\n\n\n  render() {\n    var cart = JSON.parse(localStorage.getItem(\"product_cart\"));\n    let group = cart.reducer((r, a) => {\n      r[a.id] = [...(r[a.id] || []), a];\n      return r;\n    }, {});\n    let cartelm = [];\n    let j = 0;\n    let total = [];\n\n    for (let i in group) {\n      cartelm.push(group[i].map(elm => {\n        let price = elm.price * group[i].length;\n        total.push(price);\n\n        if (group[i].indexOf(elm) == 0) {\n          j++;\n          return React.createElement(\"tr\", {\n            key: elm.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 32\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 34\n            },\n            __self: this\n          }, j), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 35\n            },\n            __self: this\n          }, elm.name), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 36\n            },\n            __self: this\n          }, group[i].length), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 37\n            },\n            __self: this\n          }, price));\n        }\n      }));\n    }\n\n    const reducer = (accumulator, currentValue) => accumulator + currentValue;\n\n    let sum = total.reduce(reducer);\n    let elm = cartelm.map(elm => {\n      return elm;\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"#\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Item\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Quantity\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Price\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, elm, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Price\"), React.createElement(\"td\", {\n      colSpan: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, sum)))), React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \" Check Out \"));\n  }\n\n}","map":{"version":3,"sources":["/Users/anasshar/Documents/GitHub/SEI/projects/Steak/cafe/Steak/coffee/src/components/Cart.jsx"],"names":["React","Component","Table","Button","Cart","state","cart","props","componentDidMount","JSON","parse","localStorage","getItem","temp","push","setState","render","group","reducer","r","a","id","cartelm","j","total","i","map","elm","price","length","indexOf","name","accumulator","currentValue","sum","reduce"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Table, Button } from \"react-bootstrap\";\nexport default class Cart extends Component {\n  state = {\n    cart: this.props.cart\n  };\n  componentDidMount() {\n    var cart = JSON.parse(localStorage.getItem(\"product_cart\"));\n    let temp = this.state.cart;\n    temp.push(cart);\n    this.setState({ cart: temp });\n  }\n  //\n  render() {\n    var cart = JSON.parse(localStorage.getItem(\"product_cart\"));\n\n    let group = cart.reducer((r, a) => {\n  \n      r[a.id] = [...(r[a.id] || []), a];\n      return r;\n    }, {});\n    let cartelm=[];\nlet j = 0\n    let total = [];\n    for (let i in group) {\n      cartelm.push(group[i].map(elm => {\n        let price = elm.price * (group[i].length );\n        total.push(price)\n        if (group[i].indexOf(elm) == 0) {\n            j++\n          return (\n            <tr key={elm.id}>\n               \n              <td>{j}</td>\n              <td>{elm.name}</td>\n              <td>{group[i].length }</td>\n              <td>{price}</td>\n            </tr>\n      );\n        }\n        \n      }));\n     \n    }\n    const reducer = (accumulator, currentValue) => accumulator + currentValue;\n   let sum= total.reduce(reducer)\n    let elm =cartelm.map((elm)=>{\n        return elm\n    })\n    return (\n      <div>\n        <Table striped bordered hover>\n          <thead>\n            <tr>\n              <th>#</th>\n              <th>Item</th>\n              <th>Quantity</th>\n              <th>Price</th>\n            </tr>\n          </thead>\n          <tbody>\n            {elm}\n            <tr>\n              <td>Price</td>\n              <td colSpan=\"3\">\n              {sum}\n              </td>\n            </tr>\n          </tbody>\n        </Table>\n        <Button> Check Out </Button>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}