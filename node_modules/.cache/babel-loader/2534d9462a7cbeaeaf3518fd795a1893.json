{"ast":null,"code":"var _jsxFileName = \"/Users/anasshar/Documents/GitHub/SEI/projects/Steak/cafe/Steak/coffee/src/components/Map.jsx\";\nimport React from 'react';\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react';\nimport Axios from 'axios';\nexport class MapContainer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.displayMarkers = () => {\n      return this.state.stores.map((store, index) => {\n        return React.createElement(Marker, {\n          key: index,\n          id: index,\n          position: {\n            lat: store.latitude,\n            lng: store.longitude\n          },\n          onClick: () => console.log(\"You clicked me!\"),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        });\n      });\n    };\n\n    this.state = {\n      hits: [],\n      isLoading: false,\n      error: null\n    }, {\n      userLocation: {\n        lat: 32,\n        lng: 32\n      },\n      loading: true,\n      data: null\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:2551/api/v1/stores/').then(resp => resp.json()).then(data => this.setState({\n      data: data\n    }));\n  }\n\n  componentDidMount(props) {\n    navigator.geolocation.getCurrentPosition(position => {\n      const _position$coords = position.coords,\n            latitude = _position$coords.latitude,\n            longitude = _position$coords.longitude;\n      this.setState({\n        stores: [{\n          lat: 47.49855629475769,\n          lng: -122.14184416996333\n        }, {\n          latitude: 47.359423,\n          longitude: -122.021071\n        }, {\n          latitude: 47.2052192687988,\n          longitude: -121.988426208496\n        }, {\n          latitude: 47.6307081,\n          longitude: -122.1434325\n        }, {\n          latitude: 47.3084488,\n          longitude: -122.2140121\n        }, {\n          latitude: 47.5524695,\n          longitude: -122.0425407\n        }],\n        userLocation: {\n          lat: latitude,\n          lng: longitude\n        },\n        loading: false\n      });\n    }, () => {\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    console.log(this.state.data);\n    const _this$state = this.state,\n          loading = _this$state.loading,\n          userLocation = _this$state.userLocation;\n    const google = this.props.google;\n\n    if (loading) {\n      return null;\n    }\n\n    return React.createElement(Map, {\n      google: google,\n      initialCenter: userLocation,\n      zoom: 15,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Marker, {\n      onClick: () => console.log(\"You clicked me!\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), this.displayMarkers());\n  }\n\n}\nexport default GoogleApiWrapper({\n  apiKey: process.env.REACT_APP_API\n})(MapContainer);","map":{"version":3,"sources":["/Users/anasshar/Documents/GitHub/SEI/projects/Steak/cafe/Steak/coffee/src/components/Map.jsx"],"names":["React","Map","GoogleApiWrapper","Marker","Axios","MapContainer","Component","constructor","props","displayMarkers","state","stores","map","store","index","lat","latitude","lng","longitude","console","log","hits","isLoading","error","userLocation","loading","data","componentDidMount","fetch","then","resp","json","setState","navigator","geolocation","getCurrentPosition","position","coords","render","google","apiKey","process","env","REACT_APP_API"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react';\nimport Axios from 'axios';\nexport class MapContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hits: [],\n      isLoading: false,\n      error: null,\n    },\n    { userLocation: { lat: 32, lng: 32 }, loading: true,data:null };\n\n  }\n\n\n\n  componentDidMount() {\n      fetch('http://localhost:2551/api/v1/stores/')\n    .then((resp)=>resp.json())\n    .then(data=>this.setState({data:data}))\n  }\n  componentDidMount(props) {\n    \n    navigator.geolocation.getCurrentPosition(\n      position => {\n        const { latitude, longitude } = position.coords;\n        this.setState({\n          stores: [{ lat: 47.49855629475769, lng: -122.14184416996333 },\n          { latitude: 47.359423, longitude: -122.021071 },\n          { latitude: 47.2052192687988, longitude: -121.988426208496 },\n          { latitude: 47.6307081, longitude: -122.1434325 },\n          { latitude: 47.3084488, longitude: -122.2140121 },\n          { latitude: 47.5524695, longitude: -122.0425407 }],\n          userLocation: { lat: latitude, lng: longitude },\n          loading: false\n        });\n      },\n      () => {\n        this.setState({ loading: false });\n      }\n    );\n  }\n  displayMarkers = () => {\n    return this.state.stores.map((store, index) => {\n      return <Marker key={index} id={index} position={{\n        lat: store.latitude,\n        lng: store.longitude\n      }}\n        onClick={() => console.log(\"You clicked me!\")} />\n    })\n  }\n  render() {\n        console.log(this.state.data)\n\n    const { loading, userLocation } = this.state;\n    const { google } = this.props;\n    if (loading) {\n      return null;\n    }\n    return (\n      <Map google={google} initialCenter={userLocation} zoom={15}>\n        <Marker onClick={() => console.log(\"You clicked me!\")} />\n        {this.displayMarkers()}\n      </Map>\n    );\n  }\n}\nexport default GoogleApiWrapper({\n  apiKey: process.env.REACT_APP_API\n})(MapContainer);"]},"metadata":{},"sourceType":"module"}