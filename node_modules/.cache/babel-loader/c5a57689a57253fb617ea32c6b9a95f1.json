{"ast":null,"code":"var _jsxFileName = \"/Users/anasshar/Documents/GitHub/SEI/projects/Steak/cafe/Steak/coffee/src/components/Update.jsx\";\nimport React from 'react';\nimport { Grid, Button, Form, Radio } from 'semantic-ui-react';\nimport axios from 'axios';\n\nvar jwt = require(\"jsonwebtoken\");\n\nclass Update extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      newPassword: null,\n      confirm: null,\n      error: null,\n      apistatus: null\n    };\n  }\n\n  render() {\n    let onsubmit = () => {\n      if (this.state.newPassword === this.state.confirm) {\n        axios.put(`http://localhost:2551/api/v1/users/profile/${decoded._id}`, {\n          newPassword: this.state.password\n        }).then(response => {\n          if (response.status === 200) {\n            this.setState({\n              apistatus: \"Password changed\"\n            });\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n      } else {\n        this.setState({\n          error: \"passwords don't match\"\n        });\n      }\n    };\n\n    let onHandlerChangePass = e => {\n      this.setState({\n        newPassword: e.target.value\n      });\n    };\n\n    let onHandlerChangeConf = e => {\n      this.setState({\n        confirm: e.target.value\n      });\n    };\n\n    let token = localStorage.getItem('usertoken');\n    let decoded = jwt.decode(token);\n    console.log(decoded);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      columns: 5,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"FormController\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Form.Field, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Current Password\"), React.createElement(\"input\", {\n      placeholder: \"Current Password\",\n      type: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    })), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(Form.Field, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"New Password\"), React.createElement(\"input\", {\n      type: \"password\",\n      placeholder: \"New Password\",\n      name: \"password\",\n      onChange: onHandlerChangePass,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    })), React.createElement(Form.Field, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Confirm New Password\"), React.createElement(\"input\", {\n      type: \"password\",\n      placeholder: \"Confirm Password\",\n      name: \"confirm\",\n      onChange: onHandlerChangeConf,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    })), React.createElement(Button, {\n      primary: true,\n      type: \"submit\",\n      onClick: onsubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Submit\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(Form.Field, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(Radio, {\n      toggle: true,\n      label: \"Disble Easy Access\",\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    })), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, this.state.error), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, this.state.apistatus)))), React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default Update;","map":{"version":3,"sources":["/Users/anasshar/Documents/GitHub/SEI/projects/Steak/cafe/Steak/coffee/src/components/Update.jsx"],"names":["React","Grid","Button","Form","Radio","axios","jwt","require","Update","Component","state","newPassword","confirm","error","apistatus","render","onsubmit","put","decoded","_id","password","then","response","status","setState","catch","err","console","log","onHandlerChangePass","e","target","value","onHandlerChangeConf","token","localStorage","getItem","decode"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Grid , Button, Form , Radio } from 'semantic-ui-react'\nimport axios from 'axios'\nvar jwt = require(\"jsonwebtoken\");\nclass Update extends React.Component {\nstate={\n  newPassword:null,\n  confirm:null,\n  error : null,\n  apistatus:null\n}\n  render () {\n    let onsubmit = () => {\n      if (this.state.newPassword === this.state.confirm) {\n        axios.put(`http://localhost:2551/api/v1/users/profile/${decoded._id}`,{\n          newPassword:this.state.password\n        }).then(response => {\n          if (response.status === 200) {\n              this.setState({apistatus:\"Password changed\"})\n          }\n        }).catch(err => {\n          console.log(err);\n        })\n      }else {\n              this.setState({error:\"passwords don't match\"})\n      }\n    }\nlet onHandlerChangePass = e => {\n  this.setState({newPassword:e.target.value})\n}\nlet onHandlerChangeConf = e => {\nthis.setState({confirm:e.target.value})\n}\nlet token = localStorage.getItem('usertoken')\nlet decoded = jwt.decode(token)\nconsole.log(decoded);\n        return(\n          <div>\n          <Grid>\n<Grid.Row columns={5}>\n  <Grid.Column>\n  </Grid.Column>\n  <Grid.Column>\n  </Grid.Column>\n  <Grid.Column>\n  <div className=\"FormController\">\n    <Form>\n        <Form.Field>\n          <label>Current Password</label>\n          <input placeholder='Current Password' type='password' />\n        </Form.Field>\n  <hr/>\n        <Form.Field>\n          <label>New Password</label>\n          <input  type='password' placeholder='New Password' name=\"password\" onChange={onHandlerChangePass} />\n        </Form.Field>\n        <Form.Field>\n          <label>Confirm New Password</label>\n          <input  type='password' placeholder='Confirm Password' name=\"confirm\" onChange={onHandlerChangeConf} />\n        </Form.Field>\n        <Button primary type='submit' onClick={onsubmit}>Submit</Button>\n        <br/>\n        <br/>\n        <Form.Field>\n          <Radio toggle label='Disble Easy Access' disabled />\n        </Form.Field>\n        <h1>{this.state.error}</h1>\n            <h1>{this.state.apistatus}</h1>\n      </Form>\n      </div>\n  </Grid.Column>\n  <Grid.Column>\n  </Grid.Column>\n</Grid.Row>\n</Grid>\n          </div>\n        )\n  }\n}\nexport default Update;"]},"metadata":{},"sourceType":"module"}