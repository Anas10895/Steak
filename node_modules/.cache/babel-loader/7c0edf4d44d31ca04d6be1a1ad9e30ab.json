{"ast":null,"code":"var _jsxFileName = \"/Users/anasshar/Documents/GitHub/SEI/projects/Steak/cafe/Steak/coffee/src/components/Cart.jsx\";\nimport React, { Component } from \"react\";\nimport { Table, Button, Card } from \"react-bootstrap\";\nimport axios from 'axios';\nimport Dialog from 'react-bootstrap-dialog';\nexport default class Cart extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      cart: this.props.cart\n    };\n\n    this.Order = newOrder => {\n      axios.post(\"/api/v1/users/5df8c917778c9a4e637c9663/orders/neworder\", newOrder).then(res => console.log(res)).catch(err => console.log(err));\n    };\n  }\n\n  componentDidMount() {\n    var cart = JSON.parse(localStorage.getItem(\"product_cart\"));\n    let temp = this.state.cart; // temp.push(this.state.cart)\n\n    temp.push(cart);\n    this.setState({\n      cart: temp\n    });\n    console.log(cart.length);\n  }\n\n  render() {\n    let elm = '';\n    let sum = 0;\n    var cart = JSON.parse(localStorage.getItem(\"product_cart\"));\n    let group = cart.reduce((r, a) => {\n      r[a.id] = [...(r[a.id] || []), a];\n      return r;\n    }, {});\n    let cartelm = [];\n    let j = 0;\n    let total = [];\n\n    for (let i in group) {\n      cartelm.push(group[i].map(elm => {\n        // console.log(elm);\n        // console.log(elm.price)\n        let price = elm.price * group[i].length;\n        total.push(price); // console.log(group[i].length)\n\n        if (group[i].indexOf(elm) == 0) {\n          j++;\n          return React.createElement(\"tr\", {\n            key: elm.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 51\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 52\n            },\n            __self: this\n          }, j), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 53\n            },\n            __self: this\n          }, elm.name), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 54\n            },\n            __self: this\n          }, group[i].length), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 55\n            },\n            __self: this\n          }, price, \" $\"));\n        }\n      }));\n    } // console.log(total)\n\n\n    const reducer = (accumulator, currentValue) => accumulator + currentValue;\n\n    sum = total.reduce(reducer);\n    elm = cartelm.map(elm => {\n      return elm;\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"#\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Item\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Quantity\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Price\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, elm, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Total \"), React.createElement(\"td\", {\n      colSpan: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, sum, \" $\")))), React.createElement(Button, {\n      onClick: this.Order,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Check Out\"), React.createElement(Dialog, {\n      ref: component => {\n        this.dialog = component;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/anasshar/Documents/GitHub/SEI/projects/Steak/cafe/Steak/coffee/src/components/Cart.jsx"],"names":["React","Component","Table","Button","Card","axios","Dialog","Cart","state","cart","props","Order","newOrder","post","then","res","console","log","catch","err","componentDidMount","JSON","parse","localStorage","getItem","temp","push","setState","length","render","elm","sum","group","reduce","r","a","id","cartelm","j","total","i","map","price","indexOf","name","reducer","accumulator","currentValue","component","dialog"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Table, Button ,Card} from \"react-bootstrap\";\nimport axios from 'axios'\nimport Dialog from 'react-bootstrap-dialog'\n\nexport default class Cart extends Component {\n  state = {\n    cart: this.props.cart,\n\n\n  };\n  componentDidMount() {\n\n    var cart = JSON.parse(localStorage.getItem(\"product_cart\"));\n    let temp = this.state.cart;\n\n    // temp.push(this.state.cart)\n    temp.push(cart);\n    this.setState({ cart: temp });\n    console.log(cart.length)\n  }\n\n   Order = newOrder => {\n     axios\n      .post(\"/api/v1/users/5df8c917778c9a4e637c9663/orders/neworder\", newOrder)\n      .then(res => console.log(res))\n      .catch(err => console.log(err));\n  };\n  render() {\n    let elm =''\n    let sum=0\n  var cart = JSON.parse(localStorage.getItem(\"product_cart\"));\n    let group = cart.reduce((r, a) => {\n      r[a.id] = [...(r[a.id] || []), a];\n      return r;\n    }, {});\n    let cartelm = [];\n    let j = 0;\n    let total = [];\n    for (let i in group) {\n      cartelm.push(\n        group[i].map(elm => {\n          // console.log(elm);\n          // console.log(elm.price)\n          let price = elm.price * group[i].length;\n          total.push(price);\n          // console.log(group[i].length)\n          if (group[i].indexOf(elm) == 0) {\n            j++;\n            return (\n              <tr key={elm.id}>\n                <td>{j}</td>\n                <td>{elm.name}</td>\n                <td>{group[i].length}</td>\n                <td>{price} $</td>\n              </tr>\n            );\n          }\n        })\n      );\n    }\n    // console.log(total)\n    const reducer = (accumulator, currentValue) => accumulator + currentValue;\n    sum = total.reduce(reducer);\n    elm = cartelm.map(elm => {\n      return elm;\n    });\n  \n\n    return (\n      <div>\n        <Table striped bordered hover>\n          <thead>\n            <tr>\n              <th>#</th>\n              <th>Item</th>\n              <th>Quantity</th>\n              <th>Price</th>\n            </tr>\n          </thead>\n          <tbody>\n            {elm}\n            <tr>\n              <td>Total </td>\n              <td colSpan=\"3\">\n              {sum} $\n              </td>\n            </tr>\n          </tbody>\n        </Table>\n        <Button onClick={this.Order}>Check Out</Button>\n        <Dialog ref={(component) => { this.dialog = component }} />\n\n       \n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}